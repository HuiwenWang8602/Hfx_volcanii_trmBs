"0","# Calculate statistical information about the cogs represented in the list of genes using the function below."
"0","# Cogtest: three inputs to this function:"
"0","# 1) list of gene names from the cluster (namelist)"
"0","# 2) COG file"
"0","# 3) p-value cutoff"
"0","# 4) method for multiple testing correction"
"0","cogtest <- function(namelist, cogfile, pvalue, method = ""fdr"", cutoff = 5) {"
"0","  cogs <- subset(cogfile, is.element(cogfile$locus_tag, unique(namelist$locus_tag)) == TRUE)"
"0","  clust <- table(cogs$funclass_name)"
"0","  resm <- matrix(0, length(clust), 4) # create 0 matrix"
"0","  res <- data.frame(resm) # make 0 df"
"0","  rownames(res) <- names(clust)"
"0","  colnames(res) <- c(""probability"", ""expect"", ""count"", ""p_adjust"")"
"0","  all <- table(cogfile$funclass_name)"
"0","  for (i in 1:length(clust)) { # calc expected frequencies and pval by hypergeo and append to DF"
"0","    res[i, 1] <- phyper(clust[i], all[i], sum(all) - all[i], nrow(cogs), lower.tail = F)"
"0","    res[i, 2] <- all[i] * (nrow(cogs) / sum(all))"
"0","    res[i, 3] <- clust[i]"
"0","  }"
"0","  # multiple testing correction:"
"0","  res$p_adjust <- signif(p.adjust(res$probability, method = method), digits = 4)"
"0","  res$probability <- signif(res$probability, digits = 4)"
"0",""
"0","  fin <- subset(res, p_adjust <= pvalue & count >= cutoff)"
"0","  # fin <- subset(res) # put this on if want to see all"
"0","  fin <- cbind(""COG"" = rownames(fin), fin, stringsAsFactors = F)"
"0","  row.names(fin) <- NULL"
"0","  return(fin)"
"0","}"
"0",""
"0","cogtest(res_sig, arcogs, 0.05, cutoff = 5)"
